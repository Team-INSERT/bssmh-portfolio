plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'

	// querydsl 설정
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.bssmh.portfolio'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// querydsl
	implementation 'com.querydsl:querydsl-jpa'
	implementation 'com.querydsl:querydsl-apt'
	// mysql
	implementation 'mysql:mysql-connector-java'
	// mariadb
	implementation 'org.mariadb.jdbc:mariadb-java-client'
	// p6spy
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.8.0'
	// oauth2
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	// swagger
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.6'
	// jwt
	implementation 'io.jsonwebtoken:jjwt:0.2'
	implementation 'com.auth0:java-jwt:3.18.2'

	compileOnly 'org.projectlombok:lombok'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

// querydsl
def querydslSrcDir = 'src/main/querydsl'

querydsl {
	jpa = true
	querydslSourcesDir = querydslSrcDir
	library = "com.querydsl:querydsl-apt"
}

configurations {
	querydsl.extendsFrom compileClasspath
}

compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}

sourceSets {
	main {
		java {
			srcDirs = ['src/main/java', querydslSrcDir]
		}
	}
}